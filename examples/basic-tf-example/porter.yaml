mixins:
  - terraform

name: basic-tf-example
version: 0.1.0
tag: deislabs/basic-tf-example:v0.1.0

parameters:
  - name: a
    type: string
    default: a
  - name: b
    type: string
    default: b
  - name: c
    type: string
    default: c

outputs:
  - name: a
    type: string
    applyTo:
      - install
      - upgrade
  - name: b
    type: string
    applyTo:
      - upgrade
  - name: c
    type: string
    applyTo:
      - install

customActions:
  plan:
    description: "Invoke 'terraform plan'"
    modifies: false
    stateless: true
  show:
    description: "Invoke 'terraform show'"
    modifies: false
    stateless: true
  printVersion:
    description: "Invoke 'terraform version'"
    modifies: false
    stateless: true

install:
  - terraform:
      description: "Install Terraform assets"
      vars:
        a: "{{bundle.parameters.a}}"
        b: "{{bundle.parameters.b}}"
        c: "{{bundle.parameters.c}}"
      outputs:
        - name: a
        - name: b
        - name: c

upgrade:
  - terraform:
      description: "Upgrade Terraform assets"
      vars:
        a: "{{bundle.parameters.a}}"
        b: "{{bundle.parameters.b}}"
        c: "{{bundle.parameters.c}}"
      outputs:
        - name: a
        - name: b
        - name: c

show:
  - terraform:
      description: "Invoke 'terraform show'"

plan:
  - terraform:
      description: "Invoke 'terraform plan'"
      flags:
        no-color:
        out: "/dev/null"
        var:
          - "a={{bundle.parameters.a}}"
          - "b={{bundle.parameters.b}}"
          - "c={{bundle.parameters.c}}"

# Note: this can't be 'version:' as this would conflict with top-level field
# Hence the need for the 'arguments:' override
printVersion:
  - terraform:
      description: "Invoke 'terraform version'"
      arguments: 
        - "version"

uninstall:
  - terraform:
      description: "Uninstall Terraform assets"

